//maxSpan Code

public int maxSpan(int[] nums) 
{ 
  int span = 0; 
  int temp = 0; 
  for (int i = 0; i < nums.length; i++) 
  { 
    for (int j = 0; j < nums.length; j++) 
    { 
      if (nums[i] == nums[j]) 
      { 
		temp = j-i+1; 
		span = Math.max(temp,span); 
      } 
    } 
  } 
  return span; 
}


//canBalance Code

public boolean canBalance(int[] nums) 
{ 
  int leftSum = 0; 
  for (int idx = 0; idx < nums.length; idx++) 
  { 
    leftSum += nums[idx]; 
    int rightSum = 0; 
      for (int j = nums.length-1; j > i; j--) 
      { 
       rightSum += nums[j]; 
      
      } 
    if (rightSum == leftSum) 
      return true; 
    
  } 
  return false; 
}


//seriesUp Code

public int[] seriesUp(int n) 
{ 
  int[] answer = new int[n * (n + 1) / 2]; 
  int i = 0; 
  for (int j = 1; j <= n; ++j) 
    for (int k = 1; k <= j; ++k) 
      answer[i++] = k; 
  return answer; 
}